<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <artifactId>opentripplanner-api-extended</artifactId>
    <packaging>war</packaging>
    <name>OpenTripPlanner System Map</name>

    <parent>
        <groupId>org.opentripplanner</groupId>
        <artifactId>opentripplanner</artifactId>
        <version>0.9.2-SNAPSHOT</version>
    </parent>

    <dependencies>
        <!--dependency>
            <groupId>org.opentripplanner</groupId>
            <artifactId>opentripplanner-routing</artifactId>
            <version>0.2-SNAPSHOT</version>
        </dependency-->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>opentripplanner-graph-builder</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>opentripplanner-utils</artifactId>
          <version>${project.version}</version>
          <type>jar</type>
          <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>${jersey.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-spring</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.1</version>
            <classifier>jdk15</classifier>
            <exclusions>
               <exclusion>
                  <groupId>commons-logging</groupId>
                  <artifactId>commons-logging</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>commons-collections</groupId>
                  <artifactId>commons-collections</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>commons-beanutils</groupId>
                  <artifactId>commons-beanutils</artifactId>
               </exclusion>
               <exclusion>
                  <groupId>commons-lang</groupId>
                  <artifactId>commons-lang</artifactId>
               </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.5.8</version>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
      </dependency>
    </dependencies>

    <build>
        <finalName>opentripplanner-api-extended</finalName>
        <plugins>
            <!-- Copy in a couple of default resources if they are not already present -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- bind to the generate-resources phase, which comes just before 
                        process-resources. the WAR packaging type automatically defines a
                        resources:resources execution in the process-resources phase, which copies 
                        resources from /src/main/resources to target/classes, and this automatic 
                        execution will happen _before_ any manually declared execution in the same 
                        phase, copying the resources into target before the defaults are provided. -->
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/src/main/resources</outputDirectory>
                            <overwrite>false</overwrite>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/defaults/resources </directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- If we are running in hudson -->
    <!--
    <profiles>
        <profile>
            <id>hudson</id>
            <activation>
                <property>
                    <name>BUILD_NUMBER</name>
                </property>
            </activation>

            <distributionManagement>
                <site>
                    <id>opentripplanner-docs</id> 
                    <name>OpenTripPlanner Docs</name>
                    <url>scp://opentripplanner.org/home/mavendeploy/otp-maven-site/webapi</url>
                </site>
            </distributionManagement>

            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.enunciate</groupId>
                        <artifactId>maven-enunciate-plugin</artifactId>
                        <version>1.17</version>
                        <configuration>
                            <configFile>../opentripplanner-api-webapp/enunciate.xml</configFile> 
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>
    -->

</project>
